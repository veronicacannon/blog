I"<h1 id="glossary">Glossary</h1>

<h2 id="wimp">WIMP</h2>
<p>Windows
Icons
Menus
Pointers</p>

<hr />

<h2 id="repl">REPL</h2>
<ul>
  <li>read</li>
  <li>evaluate</li>
  <li>print</li>
  <li>loop</li>
</ul>

<hr />

<h2 id="persistence">Persistence</h2>
<p>State preserved when program quits and restarts.</p>

<hr />

<h2 id="recursion">Recursion</h2>
<p>A recursive algorithm must:</p>
<ol>
  <li>Have a base case; an escape clause from the function</li>
  <li>Change its state and move toward base case</li>
  <li>Call itself recursively</li>
</ol>

<hr />

<h2 id="algorithm">Algorithm</h2>
<p>An algorithm is a step by step list of instructions to solve a problem.<br />
Basic instructions:</p>
<ul>
  <li>input</li>
  <li>output</li>
  <li>math and logic</li>
  <li>conditional execution</li>
  <li>repetition</li>
</ul>

<hr />

<h2 id="resource">Resource</h2>
<p>A URN is similar to a person’s name, while a URL is like a street address. The URN defines something’s identity, while the URL provides a location. Essentially, “what” vs. “where”. A URN has to be of this form <URN> ::= "urn:" <NID> ":" <NSS> where <NID> is the Namespace Identifier, and <NSS> is the Namespace Specific String.</NSS></NID></NSS></NID></URN></p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    A URL is a URI that:
    1) identifies a resource
    2) provides the means of locating the resource by describing the way to access it
    A URL is a URI
    A URI is not necessarily a URL
</code></pre></div></div>

:ET